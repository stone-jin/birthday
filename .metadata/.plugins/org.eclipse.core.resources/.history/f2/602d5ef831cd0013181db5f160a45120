package com.edu.birthday;

import com.edu.bean.SQL_Person;
import com.edu.sql.Sql_birth;
import com.edu.util.DayUtil;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.Toast;

public class add_birthday extends Activity {
	
	//界面控件
	private Button add_birthday_title_back;
	private ImageView add_birthday_photo;
	private Button add_birthday_search1;
	private Button add_birthday_search2;
	private RadioButton add_birthday_boy;
	private RadioButton add_birthday_girl;
	private Button add_birthday_save;
	private EditText add_birthday_name;
	private EditText add_birthday_phone;
	private EditText add_birthday_birthday_time;

	//普通变量
	public static final int SEARCH_CONTACT_FOR_NAME = 0;
	public static final int SEARCH_CONTACT_FOR_PHONE = 1;
	public static final int monthDAY[] = {31,28,31,30,31,30,31,31,30,31,30,31};
	
	private Sql_birth sql_birth;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.add_birthday);
		dateInit();
		viewInit();
	}
	
	private void dateInit(){
		sql_birth = new Sql_birth(this);
	}
	
	private void viewInit(){
		add_birthday_title_back = (Button) this.findViewById(R.id.add_birthday_title_back);
		add_birthday_title_back.setOnClickListener(onClickListener);
		add_birthday_photo = (ImageView) this.findViewById(R.id.add_birthday_photo);
		add_birthday_photo.setOnClickListener(onClickListener);
		add_birthday_search1 = (Button) this.findViewById(R.id.add_birthday_search1);
		add_birthday_search1.setOnClickListener(onClickListener);
		add_birthday_search2 = (Button) this.findViewById(R.id.add_birthday_search2);
		add_birthday_search2.setOnClickListener(onClickListener);
		add_birthday_boy = (RadioButton) this.findViewById(R.id.add_birthday_boy);
		add_birthday_girl = (RadioButton) this.findViewById(R.id.add_birthday_girl);
		add_birthday_boy.setChecked(true);
		add_birthday_save = (Button) this.findViewById(R.id.add_birthday_save);
		add_birthday_save.setOnClickListener(onClickListener);
		add_birthday_name = (EditText) this.findViewById(R.id.add_birthday_name);
		add_birthday_phone = (EditText) this.findViewById(R.id.add_birthday_phone);
		add_birthday_birthday_time = (EditText) this.findViewById(R.id.add_birthday_birthday_time);
	}
	
	OnClickListener onClickListener = new OnClickListener() {
		
		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			switch(v.getId()){
			case R.id.add_birthday_title_back:
				add_birthday.this.finish();
				break;
			case R.id.add_birthday_photo:
				Toast.makeText(getApplicationContext(), "当前不支持切换头像", Toast.LENGTH_LONG).show();
				break;
			case R.id.add_birthday_search1:
				Intent intent = new Intent(add_birthday.this,search_contact.class);
				intent.putExtra("search_contact_for_name", true);
				startActivityForResult(intent, SEARCH_CONTACT_FOR_NAME);
				break;
			case R.id.add_birthday_search2:
				Intent intent1 = new Intent(add_birthday.this,search_contact.class);
				intent1.putExtra("search_contact_for_phone", true);
				startActivityForResult(intent1, SEARCH_CONTACT_FOR_PHONE);
				break;
			case R.id.add_birthday_save:
				if(saveTodb() == true){
					add_birthday.this.finish();
				}
				break;
			}
		}
	};

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		// TODO Auto-generated method stub
		if(data == null){
			System.out.println("No data is commit");
		}else{
			switch(requestCode){
			case SEARCH_CONTACT_FOR_NAME:
				Bundle bundle = data.getExtras();
				String str = bundle.getString("search_contact_for_name");
				add_birthday_name.setText(str);
				break;
			case SEARCH_CONTACT_FOR_PHONE:
				Bundle bundle2 = data.getExtras();
				String str2 = bundle2.getString("search_contact_for_phone");
				add_birthday_phone.setText(str2);
				break;
			}
		}
	}
	
	private boolean saveTodb(){
		SQL_Person person = new SQL_Person();
		int year,month,day,age;
		String s = add_birthday_birthday_time.getText().toString();
		String s1[] = s.split("\\.");
		if(s1.length != 3){
			Toast.makeText(getApplicationContext(), "日期格式：年.月.日", Toast.LENGTH_LONG).show();
			return false;
		}
		try{
		year = Integer.parseInt(s1[0]);
		month = Integer.parseInt(s1[1]);
		day = Integer.parseInt(s1[2]);
		}catch(Exception e){
			Toast.makeText(getApplicationContext(), "日期格式：年.月.日", Toast.LENGTH_LONG).show();
			return false;
		}
		if((month >= 1 && month <= 12) == false){
			Toast.makeText(getApplicationContext(), "月份：1-12", Toast.LENGTH_LONG).show();
			return false;
		}
		if((month != 2) == true){
			if((day >= 1 && day <= monthDAY[month - 1]) == false){
				Toast.makeText(getApplicationContext(), "日：1-" + monthDAY[month-1], Toast.LENGTH_LONG).show();
				return false;
			}
		}else{
			if(DayUtil.isLeapYear(year)){
				if((day >= 1 && day <= 29) == false){
					Toast.makeText(getApplicationContext(), "日：1-29", Toast.LENGTH_LONG).show();
					return false;
				}
			}else{
				if((day >= 1 && day <= 28) == false){
					Toast.makeText(getApplicationContext(), "日：1-28", Toast.LENGTH_LONG).show();
					return false;				
				}
			}
		}
		if((year >= DayUtil.getCurYear() && month >= DayUtil.getCurMonth() && day > DayUtil.getCurDay())==true){
			Toast.makeText(getApplicationContext(), "填写的日期大于当前日期", Toast.LENGTH_LONG).show();
			return false;
		}
		person.setName(add_birthday_name.getText().toString());
		person.setAge(DayUtil.getCurYear() - year);
		person.setSex((add_birthday_boy.isChecked()?"男":"女"));
		person.setPhoto("");
		person.setGreyear(year);
		person.setGremonth(month);
		person.setGreday(day);
		person.setPhone(add_birthday_phone.getText().toString());
		person.setAnimal(DayUtil.getAnimals(year));
		System.out.println(DayUtil.getConstellation(11, 16));
		person.setConstellation("天蝎座");
		person.setBeizhuInfo("生日吃水果");
		sql_birth.insert(person);
		return true;
	}
}
