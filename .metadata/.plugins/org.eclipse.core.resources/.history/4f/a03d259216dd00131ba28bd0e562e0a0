package com.edu.birthday;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class register extends Activity {
	
	//view¿Ø¼þ
	private Button register_back;
	private Button register_registerbutton;
	private EditText register_user;
	private EditText register_password;
	
	private String user;
	private String password;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.register);
		viewInit();
	}
	
	private void viewInit(){
		register_back = (Button) this.findViewById(R.id.register_back);
		register_back.setOnClickListener(onClickListener);
		register_registerbutton = (Button) this.findViewById(R.id.register_registerbutton);
		register_registerbutton.setOnClickListener(onClickListener);
		register_user = (EditText) this.findViewById(R.id.register_user);
		register_password = this.findViewById(R.id.register_password);
	}
	
	OnClickListener onClickListener = new OnClickListener() {
		
		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			switch(v.getId()){
			case R.id.register_back:
				register.this.finish();
				break;
			case R.id.register_registerbutton:
				InputMethodManager inputMethodManager = (InputMethodManager) getApplication().getSystemService(INPUT_METHOD_SERVICE);
				inputMethodManager.hideSoftInputFromWindow(register.this.getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
				break;
			}
		}
	};
	
	private class RegisterTask extends AsyncTask<Void, Integer, Void>{
		private String httpurl = "http://pickingstone.sinaapp.com/api/register.php?";
		private String content = "";

		@Override
		protected Void doInBackground(Void... params) {
			// TODO Auto-generated method stub
			publishProgress(0);
			try {
				URL url = new URL(httpurl + "user=" + user + "&password=" + password + "&action=register");
				HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
				InputStreamReader isr = new InputStreamReader(httpURLConnection.getInputStream());
				BufferedReader br = new BufferedReader(isr);
				String stringline = "";
				while((stringline = br.readLine()) != null){
					content += stringline + "\n";
				}
				System.out.println(content);
				if(content.equals("³É¹¦\n")){
					publishProgress(1);
				}else if(content.equals("Ê§°Ü1\n")){
					publishProgress(2);
				}else if(content.equals("Ê§°Ü2\n")){
					publishProgress(3);
				}
				br.close();
				isr.close();
				httpURLConnection.disconnect();
			} catch (MalformedURLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return null;
		}

		@Override
		protected void onProgressUpdate(Integer... values) {
			// TODO Auto-generated method stub
			super.onProgressUpdate(values);
			switch(values[0]){
			case 0:
				login_loginbutton.setText("ÕýÔÚµÇÂ½");
				break;
			case 1:
				login_loginbutton.setText("×¢Ïú");
				break;
			case 2:
				Toast.makeText(getApplicationContext(), "ÓÃ»§Ãû´íÎó", Toast.LENGTH_SHORT).show();
				login_loginbutton.setText("µÇÂ½");
				break;
			case 3:
				Toast.makeText(getApplicationContext(), "ÃÜÂë´íÎó", Toast.LENGTH_SHORT).show();
				login_loginbutton.setText("µÇÂ½");
				break;
			}
		}
	}
}
